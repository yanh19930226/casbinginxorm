basePath: /
definitions:
  models.AddRole:
    properties:
      name:
        type: string
      status:
        type: integer
    type: object
  models.AddUser:
    properties:
      mobile:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.CreateTokenRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Role:
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      status:
        format: int64
        type: integer
    type: object
  models.UpdateRole:
    properties:
      name:
        type: string
      status:
        type: integer
    type: object
  models.UpdateUser:
    properties:
      mobile:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      id:
        format: int64
        type: integer
      mobile:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  utils.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
host: localhost:9000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/auth/createrefreshtoken:
    post:
      consumes:
      - application/json
      description: CreateRefreshToken
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: CreateRefreshToken
      tags:
      - auth
  /api/v1/auth/createtoken:
    post:
      consumes:
      - application/json
      description: CreateToken
      parameters:
      - description: CreateToken
        in: body
        name: createtokenrequest
        required: true
        schema:
          $ref: '#/definitions/models.CreateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: CreateToken
      tags:
      - auth
  /api/v1/auth/validrefreshtoken/{refreshtoken}:
    get:
      consumes:
      - application/json
      description: ValidRefreshToken
      parameters:
      - description: refreshtoken
        in: query
        name: refreshtoken
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ValidRefreshToken
      tags:
      - auth
  /api/v1/auth/validtoken/{token}:
    get:
      consumes:
      - application/json
      description: ValidToken
      parameters:
      - description: token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ValidToken
      tags:
      - auth
  /api/v1/hello:
    get:
      consumes:
      - application/json
      description: Hello
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Hello
      tags:
      - hello
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: get roles
      parameters:
      - description: name search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: List roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: add by json role
      parameters:
      - description: Add role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.AddRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Add an role
      tags:
      - roles
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by role ID
      parameters:
      - description: Role ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Delete an role
      tags:
      - roles
    patch:
      consumes:
      - application/json
      description: Update by json role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Update an role
      tags:
      - roles
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: get users
      parameters:
      - description: name search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: add by json user
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AddUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Add an user
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by user ID
      parameters:
      - description: User ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Delete an user
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update by json user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Update an user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
